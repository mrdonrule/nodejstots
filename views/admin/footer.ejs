<!-- /.content-wrapper -->
<footer class="main-footer">
    <div class="float-right d-none d-sm-block">
        <b>Version</b> 1
    </div>
    <strong>Copyright &copy; 2022 <a href="//stormcelltech.com">Stormcell Tech</a>.</strong> All rights reserved.
</footer>
<script src="/adminlte/plugins/jquery/jquery.js"></script>
<script src="/adminlte/plugins/bootstrap/js/bootstrap.bundle.js"></script>
<!-- AdminLTE App -->
<script src="/adminlte/dist/js/adminlte.js"></script>
<!-- AdminLTE for demo purposes -->
<script src="https://unpkg.com/web3@latest/dist/web3.min.js"></script>

<script>
    var nftABi;
    const ethereum = window.ethereum;
    const web3 = new Web3(ethereum);

    const ABIContract = "0x1317F11Fd2c976bF7cA72b847Ad09D36b7eAC326";

    ethereum.autoRefreshOnNetworkChange = false;

    let wallhold = document.getElementsByClassName("wallet-text")[0];


    function connectMetamask() {

        ethereum
            .request({
                method: 'eth_chainId'
            })
            .then((chainId) => {
                getAccount();
                // if (parseInt(chainId, 16) === 1) {
                //     getAccount();
                // } else {

                //     alert('Switch To Ethereum Main Network');
                // }
                // console.log(`hexadecimal string: ${chainId}`);
                //console.log(`decimal number: ${parseInt(chainId, 16)}`);
            })
            .catch((error) => {


                console.error(`Error fetching chainId: ${error.code}: ${error.message}`);
            });


    }
    getAccount();

    async function getAccount() {

        try {
            const accounts = await ethereum.request({
                method: 'eth_requestAccounts'
            });
            if (accounts.length > 0) {
                window.account = accounts[0];
                wallhold.innerHTML = accounts[0];
            } else {
                wallhold.innerHTML = "Connect Metamask";
            }
        } catch (err) {
            console.log(err);
        }

    };

    ethereum.on('accountsChanged', function(accounts) {

        wallhold.innerHTML = accounts[0];
    });
    // var nftABi = [{
    //         "inputs": [],
    //         "stateMutability": "nonpayable",
    //         "type": "constructor"
    //     }, {
    //         "anonymous": false,
    //         "inputs": [{
    //             "indexed": true,
    //             "internalType": "address",
    //             "name": "owner",
    //             "type": "address"
    //         }, {
    //             "indexed": true,
    //             "internalType": "address",
    //             "name": "approved",
    //             "type": "address"
    //         }, {
    //             "indexed": true,
    //             "internalType": "uint256",
    //             "name": "tokenId",
    //             "type": "uint256"
    //         }],
    //         "name": "Approval",
    //         "type": "event"
    //     }, {
    //         "anonymous": false,
    //         "inputs": [{
    //             "indexed": true,
    //             "internalType": "address",
    //             "name": "owner",
    //             "type": "address"
    //         }, {
    //             "indexed": true,
    //             "internalType": "address",
    //             "name": "operator",
    //             "type": "address"
    //         }, {
    //             "indexed": false,
    //             "internalType": "bool",
    //             "name": "approved",
    //             "type": "bool"
    //         }],
    //         "name": "ApprovalForAll",
    //         "type": "event"
    //     }, {
    //         "anonymous": false,
    //         "inputs": [{
    //             "indexed": true,
    //             "internalType": "address",
    //             "name": "from",
    //             "type": "address"
    //         }, {
    //             "indexed": true,
    //             "internalType": "address",
    //             "name": "to",
    //             "type": "address"
    //         }, {
    //             "indexed": true,
    //             "internalType": "uint256",
    //             "name": "tokenId",
    //             "type": "uint256"
    //         }],
    //         "name": "Transfer",
    //         "type": "event"
    //     }, {
    //         "inputs": [{
    //             "internalType": "address",
    //             "name": "to",
    //             "type": "address"
    //         }, {
    //             "internalType": "uint256",
    //             "name": "tokenId",
    //             "type": "uint256"
    //         }],
    //         "name": "approve",
    //         "outputs": [],
    //         "stateMutability": "nonpayable",
    //         "type": "function"
    //     }, {
    //         "inputs": [{
    //             "internalType": "address",
    //             "name": "owner",
    //             "type": "address"
    //         }],
    //         "name": "balanceOf",
    //         "outputs": [{
    //             "internalType": "uint256",
    //             "name": "",
    //             "type": "uint256"
    //         }],
    //         "stateMutability": "view",
    //         "type": "function"
    //     }, {
    //         "inputs": [{
    //             "internalType": "uint256",
    //             "name": "tokenId",
    //             "type": "uint256"
    //         }],
    //         "name": "getApproved",
    //         "outputs": [{
    //             "internalType": "address",
    //             "name": "",
    //             "type": "address"
    //         }],
    //         "stateMutability": "view",
    //         "type": "function"
    //     }, {
    //         "inputs": [{
    //             "internalType": "address",
    //             "name": "owner",
    //             "type": "address"
    //         }, {
    //             "internalType": "address",
    //             "name": "operator",
    //             "type": "address"
    //         }],
    //         "name": "isApprovedForAll",
    //         "outputs": [{
    //             "internalType": "bool",
    //             "name": "",
    //             "type": "bool"
    //         }],
    //         "stateMutability": "view",
    //         "type": "function"
    //     }, {
    //         "inputs": [{
    //             "internalType": "string",
    //             "name": "tokenURI",
    //             "type": "string"
    //         }],
    //         "name": "mintToken",
    //         "outputs": [{
    //             "internalType": "uint256",
    //             "name": "",
    //             "type": "uint256"
    //         }],
    //         "stateMutability": "nonpayable",
    //         "type": "function"
    //     }, {
    //         "inputs": [],
    //         "name": "name",
    //         "outputs": [{
    //             "internalType": "string",
    //             "name": "",
    //             "type": "string"
    //         }],
    //         "stateMutability": "view",
    //         "type": "function"
    //     }, {
    //         "inputs": [{
    //             "internalType": "uint256",
    //             "name": "tokenId",
    //             "type": "uint256"
    //         }],
    //         "name": "ownerOf",
    //         "outputs": [{
    //             "internalType": "address",
    //             "name": "",
    //             "type": "address"
    //         }],
    //         "stateMutability": "view",
    //         "type": "function"
    //     }, {
    //         "inputs": [{
    //             "internalType": "address",
    //             "name": "from",
    //             "type": "address"
    //         }, {
    //             "internalType": "address",
    //             "name": "to",
    //             "type": "address"
    //         }, {
    //             "internalType": "uint256",
    //             "name": "tokenId",
    //             "type": "uint256"
    //         }],
    //         "name": "safeTransferFrom",
    //         "outputs": [],
    //         "stateMutability": "nonpayable",
    //         "type": "function"
    //     }, {
    //         "inputs": [{
    //             "internalType": "address",
    //             "name": "from",
    //             "type": "address"
    //         }, {
    //             "internalType": "address",
    //             "name": "to",
    //             "type": "address"
    //         }, {
    //             "internalType": "uint256",
    //             "name": "tokenId",
    //             "type": "uint256"
    //         }, {
    //             "internalType": "bytes",
    //             "name": "_data",
    //             "type": "bytes"
    //         }],
    //         "name": "safeTransferFrom",
    //         "outputs": [],
    //         "stateMutability": "nonpayable",
    //         "type": "function"
    //     }, {
    //         "inputs": [{
    //             "internalType": "address",
    //             "name": "operator",
    //             "type": "address"
    //         }, {
    //             "internalType": "bool",
    //             "name": "approved",
    //             "type": "bool"
    //         }],
    //         "name": "setApprovalForAll",
    //         "outputs": [],
    //         "stateMutability": "nonpayable",
    //         "type": "function"
    //     }, {
    //         "inputs": [{
    //             "internalType": "bytes4",
    //             "name": "interfaceId",
    //             "type": "bytes4"
    //         }],
    //         "name": "supportsInterface",
    //         "outputs": [{
    //             "internalType": "bool",
    //             "name": "",
    //             "type": "bool"
    //         }],
    //         "stateMutability": "view",
    //         "type": "function"
    //     }, {
    //         "inputs": [],
    //         "name": "symbol",
    //         "outputs": [{
    //             "internalType": "string",
    //             "name": "",
    //             "type": "string"
    //         }],
    //         "stateMutability": "view",
    //         "type": "function"
    //     }, {
    //         "inputs": [{
    //             "internalType": "uint256",
    //             "name": "tokenId",
    //             "type": "uint256"
    //         }],
    //         "name": "tokenURI",
    //         "outputs": [{
    //             "internalType": "string",
    //             "name": "",
    //             "type": "string"
    //         }],
    //         "stateMutability": "view",
    //         "type": "function"
    //     }, {
    //         "inputs": [{
    //             "internalType": "address",
    //             "name": "from",
    //             "type": "address"
    //         }, {
    //             "internalType": "address",
    //             "name": "to",
    //             "type": "address"
    //         }, {
    //             "internalType": "uint256",
    //             "name": "tokenId",
    //             "type": "uint256"
    //         }],
    //         "name": "transferFrom",
    //         "outputs": [],
    //         "stateMutability": "nonpayable",
    //         "type": "function"
    //     }]
    $.ajax({
        url: "/upload/nftmint-abi.json",
        async: false,
        dataType: 'json',
        success: function(data) {
            nftABi = data;
        }
    });
    // console.log(nftABi);

    // const daiToken = new web3.eth.Contract(ERC20TransferABI, DAI_ADDRESS)





    async function mint(_uri, pid, id) {
        const button = document.getElementById(id);
        button.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
        button.disabled = true

        const accounts = await ethereum.request({
            method: 'eth_requestAccounts'
        });
        const account = accounts[0];
        const AlkomNFTmin = new web3.eth.Contract(nftABi, ABIContract);


        // console.log(AlkomNFTmin);
        AlkomNFTmin.methods.mintToken(_uri)
            .send({
                from: account
            })
            .once("error", (err) => {
                button.innerHTML = "Mint";
                button.disabled = false
                alert('Error occued check console');
                console.log(err);

            })
            .then((receipt) => {
                const txhash = receipt.transactionHash;

                if (receipt.status == true) {
                    $.ajax({
                        type: 'POST',
                        url: "/admin/nft/update",
                        dataType: 'json',
                        data: {
                            id: pid,
                            hash: txhash
                        },
                        success: function(data) {
                            if (data.status == 'Success') {
                                button.innerHTML = 'Minted';

                                alert(data.message);
                                console.log(data)
                            } else {
                                button.innerHTML = 'Mint';
                                alert(data.message);
                                console.log(data)
                            }
                        },

                    });
                } else {
                    button.innerHTML = 'Mint';
                    alert('Error occured miniting NFT check console log');
                }
                console.log(receipt);

            })
    }

    $(document).ready(function() {

        $('#FormUpload').on('change', '#nftFile', function() {


            var file = $('#nftFile').get(0).files[0];
            if (file) {
                $("#previewImg").attr("src", URL.createObjectURL(file));



            }
        });

    });
</script>
</body>

</html>